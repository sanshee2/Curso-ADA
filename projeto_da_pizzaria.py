# -*- coding: utf-8 -*-
"""Projeto da Pizzaria

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17J2eWSvi8mftk8VG0QFqoSCaesQchNfd
    Tem uma função adicional de encriptação, bastante básica.
"""

#VARIÁVEIS DO SISTEMA
#Variáveis globais  do programa
pedido = ""
cont_pep = 0
cont_que = 0
cont_cal = 0
mensagem = ""

#Variaveis globais dos preços. Elas poderiam ser importadas de um banco de dados.
preco_calabresa = 70.0
preco_queijo = 50.0
preco_pepperoni = 80.0

def exibe_cardapio(): #1
  global preco_calabresa
  global preco_queijo
  global preco_pepperoni

  print(f'''
  Cardapio de Pizzas:
  Calabresa___________R${preco_calabresa}
  Queijo______________R${preco_queijo}
  Pepperoni___________R${preco_pepperoni}
  ''')

def checa_pedido(): #2
  '''Método feito para receber o input do usuário, testá-lo e processá-lo. Retorna o pedido'''
  pedido_true = False
  pizzas_disponiveis = ["pepperoni", "queijo", "calabresa"]

  while pedido_true == False:
    exibe_cardapio()
    pedido = input("Qual pizza você gostaria de pedir? ").lower().strip()
    if pedido in pizzas_disponiveis:
      pedido_true = True
      return pedido
    else:
      print(f"Não temos {pedido.title()} no cardapio")
      pedido = False
      pedido_true = False

def computa_pedido(pedido, cont_pep, cont_que, cont_cal): #2
  '''Essa funcao recebe o pedido do usuario, depois de validado pelo checa_pedido e em seguida armazena esses valores.'''

  qtd_ok = False
  while qtd_ok == False:
    qtd_teste = input(f"Quantas pizzas de {pedido} voce quer? ")
    if qtd_teste.isnumeric() == True and int(qtd_teste) > 0:
      quantidade = int(qtd_teste)
      qtd_ok = True
      continue
    else:
      print("Insira apenas numeros positivos. Ex: 1, 2, 3")
  if pedido == "pepperoni":
    cont_pep += quantidade
  elif pedido == "queijo":
    cont_que += quantidade
  elif pedido == "calabresa":
    cont_cal += quantidade
  return cont_pep, cont_que, cont_cal

def pedir_novamente(): #3
  '''Essa funcao recebe um string para dar ou não continuidade ao programa'''
  pedir_novamente = ""

  while pedir_novamente != 'nao' or pedir_novamente != 'não' or pedir_novamente != 'sim':
    pedir_novamente = input("Gostaria de pedir novamente? SIM ou NÃO ").lower().strip()
    if pedir_novamente == 'nao' or pedir_novamente == 'não':
      pedir_novamente = False
      return pedir_novamente
    elif pedir_novamente == "sim":
      pedir_novamente = True
      return pedir_novamente
    else:
      print("Apenas SIM ou NÃO.")

def mensagem_conta(cont_pizza, preco_pizza, pizza): #4 talvez a mais importante.

  msg = f"{cont_pizza}x {pizza.title()}___________R${preco_pizza * cont_pizza} "
  print(msg)
  return msg

def calcula_conta (cont_pep, cont_que, cont_cal, mensagem): #4
    '''Essa função vai receber os valores das contagens dos pedidos e tratá-los. O ultimo parâmetro serve para a decodificação.'''
    global preco_calabresa
    global preco_queijo
    global preco_pepperoni

    print("*"*21)
    print(f"O pedido final foi: ")

    if cont_pep > 0:
        mensagem += mensagem_conta(cont_pep, preco_pepperoni, "Pepperoni")
    if cont_que > 0:
        mensagem += mensagem_conta(cont_que, preco_queijo, "Queijo")
    if cont_cal > 0:
        mensagem += mensagem_conta(cont_cal, preco_calabresa, "Calabresa")

    mensagem_total = f"Total__________________R${(preco_pepperoni*cont_pep)+(preco_queijo*cont_que)+(preco_calabresa*cont_cal)}"
    print(mensagem_total)
    mensagem += mensagem_total
    print("*"*21)

    return mensagem

def for_mensagem_encrip(op, msg_cod, msg_decod, msg_encripta): #Já entra nos encriptadores.
  if op == "cod":
    for i in msg_cod:
      msg_decod.append(i[0])
    print('Deciframos a sua mensagem e ela é: ', end = '')
    return msg_decod
  else:
    for i in msg_encripta:
      print(i, end="")
    print('')

# Recebendo o output do primeiro programa

def encripta (mensagem_d):
  print("Demonstração do output do primeiro programa passando pelo encriptador do segundo")
  print('*'*41)
  print('** Bem vindo ao Encriptador do Grupo 4 **')
  print('*'*41)

  mensagem = mensagem_d
  chave1 = input('Digite a chave 1: ')
  chave2 = input('Digite a chave 2: ')

  print('''
  Selecione uma opção:

  1. Encriptografar
  2. Desencriptografar
  3. Encerrar
  ''')

  mensagem_cod = []
  mensagem_decod = []
  cont = 0

  while True:
    opcao = input('Qual opção deseja (1 / 2 / 3): ')

    if opcao == '1':
      cont += 1
      for i in mensagem:
        if mensagem.index(i) % 2 == 0:
          mensagem_cod.append(i+chave1)
        else:
          mensagem_cod.append(i+chave2)
      print('A sua mensagem códificada é: ', end = '')
      for i in mensagem_cod:
        print(i, end="")
      print('')

    elif opcao == '2':
      if mensagem_cod == []:
        print('Não há mensagem para decodificar!')
      else:
        if cont == 1:
          for_mensagem_encrip("cod", mensagem_cod, mensagem_decod,"")
          for_mensagem_encrip("", "","", mensagem_decod )
          mensagem_cod = []
          cont = 0
        else:
          for_mensagem_encrip("cod", mensagem_cod, mensagem_decod,"")
          for i in mensagem_decod[0:len(mensagem)*cont]:
            print(i, end="")
          print('')
          cont -=1
          mensagem_cod = mensagem_decod[0:len(mensagem)*cont]
          mensagem_decod = []

    elif opcao == '3':
      break

    else:
      print('Opção inválida!')

novo_pedido = True
while novo_pedido == True:
  pedido = checa_pedido()
  cont_pep, cont_que, cont_cal   = computa_pedido(pedido, cont_pep, cont_que, cont_cal)
  novo_pedido = pedir_novamente()

# Apresenta o Calculo da conta de cada pizza
mensagem = calcula_conta(cont_pep, cont_que, cont_cal, mensagem)

encripta(mensagem)
